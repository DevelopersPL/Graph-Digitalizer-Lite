/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package tools;

import plugins.*;
import plugins.binarization.Bernsen;
import plugins.binarization.Otsu;

import javax.swing.*;
import javax.swing.event.ListDataEvent;
import javax.swing.event.ListDataListener;
import java.util.Arrays;

/**
 *
 * @author Marek
 */
public class ImgModifyForm extends javax.swing.JFrame {
    DefaultListModel<MPlugin> stack = new DefaultListModel<>();

    /**
     * Creates new form ImgModifyForm
     * @param cont A frame that contains image panel
     */
    public ImgModifyForm(final BFrame cont) {
        initComponents();
        
        stack.addListDataListener(new ListDataListener() {

            @Override
            public void intervalAdded(ListDataEvent lde) {
                // Tutaj będzie aplikacja dodanych filtrów
                Object[] plugins = stack.toArray();
                cont.processPlugins(Arrays.copyOf(plugins, plugins.length, MPlugin[].class));
            }

            @Override
            public void intervalRemoved(ListDataEvent lde) {
                // Tutaj będzie aplikacja dodanych filtrów
                Object[] plugins = stack.toArray();
                cont.processPlugins(Arrays.copyOf(plugins, plugins.length, MPlugin[].class));
            }

            @Override
            public void contentsChanged(ListDataEvent lde) {
                // Tutaj będzie aplikacja dodanych filtrów
                Object[] plugins = stack.toArray();
                cont.processPlugins(Arrays.copyOf(plugins, plugins.length, MPlugin[].class));
            }
        });
        efectsStack.setModel(stack);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        gaussButton = new javax.swing.JButton();
        grayScaleButton = new javax.swing.JButton();
        invertButton = new javax.swing.JButton();
        otsuButton = new javax.swing.JButton();
        bernsenButton = new javax.swing.JButton();
        histStretchingButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        efectsStack = new javax.swing.JList();
        upButton = new javax.swing.JButton();
        delButton = new javax.swing.JButton();
        downButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        gaussButton.setText("Gauss");
        gaussButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gaussButtonActionPerformed(evt);
            }
        });

        grayScaleButton.setText("Odcienie szarości");
        grayScaleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grayScaleButtonActionPerformed(evt);
            }
        });

        invertButton.setText("Odwróć kolory");
        invertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invertButtonActionPerformed(evt);
            }
        });

        otsuButton.setText("Otsu");
        otsuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otsuButtonActionPerformed(evt);
            }
        });

        bernsenButton.setText("Bernsen");
        bernsenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bernsenButtonActionPerformed(evt);
            }
        });

        histStretchingButton.setText("Wyrównanie histogramu");
        histStretchingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                histStretchingButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gaussButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(grayScaleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(invertButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(otsuButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bernsenButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(histStretchingButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(gaussButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(grayScaleButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(invertButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(otsuButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bernsenButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(histStretchingButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        efectsStack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                efectsStackMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(efectsStack);

        upButton.setText("Góra");
        upButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upButtonActionPerformed(evt);
            }
        });

        delButton.setText("X");
        delButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delButtonActionPerformed(evt);
            }
        });

        downButton.setText("Dół");
        downButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(upButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(downButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(upButton)
                            .addComponent(delButton)
                            .addComponent(downButton)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gaussButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gaussButtonActionPerformed
        MPlugin plugin = new Convolution("Gauss");
        
        double[] gauss = { 
            1./16, 1./8, 1./16,
            1./7, 1./4, 1./8,
            1./16, 1./8, 1./16
        };
        
        plugin.setAttribute("filter", gauss);
        plugin.setAttribute("width", 3);
        
        stack.addElement(plugin);
    }//GEN-LAST:event_gaussButtonActionPerformed

    private void grayScaleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grayScaleButtonActionPerformed
        MPlugin plugin = new GrayScale();
        
        stack.addElement(plugin);
    }//GEN-LAST:event_grayScaleButtonActionPerformed

    private void invertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invertButtonActionPerformed
        MPlugin plugin = new Invert();
        
        stack.addElement(plugin);
    }//GEN-LAST:event_invertButtonActionPerformed

    private void otsuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otsuButtonActionPerformed
        MPlugin plugin = new Otsu();
        
        stack.addElement(plugin);
    }//GEN-LAST:event_otsuButtonActionPerformed

    private void bernsenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bernsenButtonActionPerformed
        MPlugin plugin = new Bernsen();
        
        stack.addElement(plugin);
    }//GEN-LAST:event_bernsenButtonActionPerformed

    private void histStretchingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_histStretchingButtonActionPerformed
        MPlugin plugin = new HistogramStretching();
        
        stack.addElement(plugin);
    }//GEN-LAST:event_histStretchingButtonActionPerformed

    private void upButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upButtonActionPerformed
        int selected = efectsStack.getSelectedIndex();
        
        if (selected < 1) return;
        
        int[] indices = efectsStack.getSelectedIndices();
        for (int x = 0; x < indices.length; x++) {
            int i = indices[x]--;
            stack.add(i - 1, stack.remove(i));
        }
        efectsStack.setSelectedIndices(indices);
    }//GEN-LAST:event_upButtonActionPerformed

    private void delButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delButtonActionPerformed
        int[] selected = efectsStack.getSelectedIndices();
        
        if (selected.length == 0) return;
        
        for (int x = selected.length-1; x >= 0; --x) {
            stack.remove(selected[x]);
        }
    }//GEN-LAST:event_delButtonActionPerformed

    private void downButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downButtonActionPerformed
        int[] selected = efectsStack.getSelectedIndices();
        
        if (selected.length == 0 || selected[selected.length-1]+1 >= stack.getSize())
            return;

        for (int x = selected.length-1; x >= 0; --x) {
            int i = selected[x]++;
            stack.add(i + 1, stack.remove(i));
        }
        efectsStack.setSelectedIndices(selected);
    }//GEN-LAST:event_downButtonActionPerformed

    private void efectsStackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_efectsStackMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() > 1)
            stack.get(efectsStack.getSelectedIndices()[0]).showSettings();
    }//GEN-LAST:event_efectsStackMouseClicked
//
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ImgModifyForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ImgModifyForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ImgModifyForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ImgModifyForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ImgModifyForm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bernsenButton;
    private javax.swing.JButton delButton;
    private javax.swing.JButton downButton;
    private javax.swing.JList efectsStack;
    private javax.swing.JButton gaussButton;
    private javax.swing.JButton grayScaleButton;
    private javax.swing.JButton histStretchingButton;
    private javax.swing.JButton invertButton;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton otsuButton;
    private javax.swing.JButton upButton;
    // End of variables declaration//GEN-END:variables
}
